{
  "reflection": [
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "android.os.Build"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.FileAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAppend",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        },
        {
          "name": "setImmediateFlush",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.McpClientTest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "testRunClient",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.BicyclingRoutePlanRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.BicyclingRoutePlanRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.BusRoutePlanRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.BusRoutePlanRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.CoordinateCovertRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.CoordinateCovertRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.DistrictQueryRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.DistrictQueryRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.DrivingRoutePlanRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.DrivingRoutePlanRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.ElectrobikeRoutePlanRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.ElectrobikeRoutePlanRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.GeocodeRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.GeocodeRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.GetWeatherRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.GetWeatherRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.InputTipsRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.InputTipsRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.IpRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.IpRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiAroundSearchRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiAroundSearchRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiDetailSearchRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiDetailSearchRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiPolygonSearchRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiPolygonSearchRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiTextSearchRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.PoiTextSearchRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.ReverseGeocodeRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.ReverseGeocodeRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.StaticMapRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.StaticMapRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.StaticMapTest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "labels",
          "parameterTypes": []
        },
        {
          "name": "markers",
          "parameterTypes": []
        },
        {
          "name": "paths",
          "parameterTypes": []
        },
        {
          "name": "simpleMap",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.WalkingRoutePlanRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "com.javaaidev.mcp.amap.tool.WalkingRoutePlanRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.smiley4.schemakenerator.core.annotations.Description",
      "methods": [
        {
          "name": "description",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.ktor.network.selector.InterestSuspensionsMap",
      "fields": [
        {
          "name": "acceptHandlerReference"
        },
        {
          "name": "connectHandlerReference"
        },
        {
          "name": "readHandlerReference"
        },
        {
          "name": "writeHandlerReference"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CallToolRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CallToolRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CallToolResult",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CallToolResult$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CancelledNotification",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.CancelledNotification$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializeRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializeRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializeResult",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializeResult$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializedNotification",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.InitializedNotification$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCNotification$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.JSONRPCResponse$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.ListToolsRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.ListToolsRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.ListToolsResult",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.ListToolsResult$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.PingRequest",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.PingRequest$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.TextContent",
      "fields": [
        {
          "name": "Companion"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.TextContent$Companion",
      "methods": [
        {
          "name": "serializer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport$start$3",
      "fields": [
        {
          "name": "label"
        }
      ]
    },
    {
      "type": "io.modelcontextprotocol.kotlin.sdk.client.StdioClientTransport$start$3$writeJob$1",
      "fields": [
        {
          "name": "label"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getPermittedSubclasses",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Enum"
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "getDescriptor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.Throwable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.annotation.Annotation",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.invoke.MethodHandle"
    },
    {
      "type": "java.lang.module.ModuleDescriptor",
      "methods": [
        {
          "name": "name",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Method"
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.security.SecureRandomParameters"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.LinkedHashSet"
    },
    {
      "type": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
      "type": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
      "type": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock$Sync"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "kotlin.Annotation"
    },
    {
      "type": "kotlin.Any"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target"
    },
    {
      "type": "kotlin.coroutines.jvm.internal.BaseContinuationImpl"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
      "allPublicFields": true
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl"
    },
    {
      "type": "kotlin.test.junit5.JUnit5Contributor"
    },
    {
      "type": "kotlinx.coroutines.CancellableContinuationImpl",
      "fields": [
        {
          "name": "_decisionAndIndex$volatile"
        },
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CancelledContinuation",
      "fields": [
        {
          "name": "_resumed$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CompletedExceptionally",
      "fields": [
        {
          "name": "_handled$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.channels.BufferedChannel",
      "fields": [
        {
          "name": "_closeCause$volatile"
        },
        {
          "name": "bufferEnd$volatile"
        },
        {
          "name": "bufferEndSegment$volatile"
        },
        {
          "name": "closeHandler$volatile"
        },
        {
          "name": "completedExpandBuffersAndPauseFlag$volatile"
        },
        {
          "name": "receiveSegment$volatile"
        },
        {
          "name": "receivers$volatile"
        },
        {
          "name": "sendSegment$volatile"
        },
        {
          "name": "sendersAndCloseStatus$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.ConcurrentLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LimitedDispatcher",
      "fields": [
        {
          "name": "runningWorkers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.Segment",
      "fields": [
        {
          "name": "cleanedAndPointers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.StackTraceRecoveryKt"
    },
    {
      "type": "kotlinx.coroutines.internal.ThreadSafeHeap",
      "fields": [
        {
          "name": "_size$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    }
  ],
  "resources": [
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/kotlin.test.AsserterContributor"
    },
    {
      "glob": "META-INF/services/org.junit.platform.engine.TestEngine"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.LauncherDiscoveryListener"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.LauncherSessionListener"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.PostDiscoveryFilter"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.TestExecutionListener"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "junit-platform.properties"
    },
    {
      "glob": "kotlin/annotation/annotation.kotlin_builtins"
    },
    {
      "glob": "kotlin/collections/collections.kotlin_builtins"
    },
    {
      "glob": "kotlin/coroutines/coroutines.kotlin_builtins"
    },
    {
      "glob": "kotlin/internal/internal.kotlin_builtins"
    },
    {
      "glob": "kotlin/kotlin.kotlin_builtins"
    },
    {
      "glob": "kotlin/ranges/ranges.kotlin_builtins"
    },
    {
      "glob": "kotlin/reflect/reflect.kotlin_builtins"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "org/slf4j/impl/StaticLoggerBinder.class"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    }
  ],
  "bundles": [],
  "serialization": [
    {
      "type": "java.lang.Enum"
    },
    {
      "type": "java.lang.Object[]"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.LinkedHashSet"
    },
    {
      "type": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "type": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
      "type": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
      "type": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock$Sync"
    }
  ],
  "jni": [
    {
      "type": "com.javaaidev.mcp.amap.ServerKt",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "lastIndexOf",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "substring",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    }
  ]
}